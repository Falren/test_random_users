name: Continuous integration
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
        with:
          ruby-version: '3.0.0'
      - name: Build and run test
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler:2.3.24
          bundle install --jobs 4 --retry 3
          bundle exec rails db:create
          bundle exec rails db:migrate
          RAILS_ENV=test rspec
      - name: Install SSH key to Server
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: github-actions
          known_hosts: ${{ secrets.SSH_HOST }}
          config: |
            host ${{ secrets.SSH_HOST }}
              IdentityFile ~/.ssh/github-actions
              IdentitiesOnly yes
              ForwardAgent yes
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }}
      - name: Deploy to production
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/github-actions
          bundle exec cap production deploy
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'Falren',
              repo: 'vue-test-sockets',
              workflow_id: 'main.yml',
              ref: 'main'
            })

